################################################################################
# Options for the test harness itself
################################################################################

# Directory where test results are saved
test.output.directory = ./results

################################################################################
# TCP options
################################################################################

# IP address of the DUT
tcp.device.address = 127.0.0.1

# IP port of the DUT min: 1 max: 65535
tcp.device.port = 20000

# IP address of the network adapter on which to capture pcaps
tcp.capture.adapter = 

################################################################################
# link-layer options
################################################################################

# Link layer address of the test harness (master)
link.source = 1

# Link layer address of the DUT (outstation)
link.destination = 1024

# Number of configured link layer retries min: 1 max: 10
link.num.retry = 3

# Link layer timeout in milliseconds min: 100
link.timeout.ms = 1000

################################################################################
# Outstation application layer options
################################################################################

# Device select timeout in milliseconds min: 1
outstation.select.timeout.ms = 2000

# Response timeout in milliseconds min: 1
outstation.response.timeout.ms = 2000

# Configurable fragment size (preferably not 2048)
outstation.fragmentSize = 2048

################################################################################
# Options related to controls (g12v1)
################################################################################

# Index not assigned to any control point
control.uninstalled.index = 65535

# Maximum number of control points that are supported in a single request min: 1
control.maxControlPointsInSingleRequest = 1

# List of all installed BO indices
control.installedPoints = 0 ... 9

# Index of a supported Group12Var1
control.primary.valid.index = 0

# Valid control function in hexadecimal from set HashSet(04, 03, 81, 41, 01)
control.primary.valid.function = 3

# Valid count for Group12Var1 min: 1 max: 255
control.primary.valid.count = 1

# On time in ms min: 0 max: 65535
control.primary.valid.onTime.ms = 100

# Off time in ms min: 0 max: 65535
control.primary.valid.offTime.ms = 100

# Index of a supported Group12Var1
control.alternate.valid.index = 1

# Valid control function in hexadecimal from set HashSet(04, 03, 81, 41, 01)
control.alternate.valid.function = 3

# Valid count for Group12Var1 min: 1 max: 255
control.alternate.valid.count = 1

# On time in ms min: 0 max: 65535
control.alternate.valid.onTime.ms = 100

# Off time in ms min: 0 max: 65535
control.alternate.valid.offTime.ms = 100

# Optional control point supporting complementary function codes Latch On/NUL (0x03) and Latch Off/NUL (0x04).
control.latchOnOffPoint.index = 1

# Valid count for Group12Var1 min: 1 max: 255
control.latchOnOffPoint.count = 1

# On time in ms min: 0 max: 65535
control.latchOnOffPoint.onTime.ms = 100

# Off time in ms min: 0 max: 65535
control.latchOnOffPoint.offTime.ms = 100

# Optional control point supporting complementary function codes Pulse On/Close (0x41) and Pulse On/Trip (0x81).
control.pulseOnOffPoint.index = 1

# Valid count for Group12Var1 min: 1 max: 255
control.pulseOnOffPoint.count = 1

# On time in ms min: 0 max: 65535
control.pulseOnOffPoint.onTime.ms = 100

# Off time in ms min: 0 max: 65535
control.pulseOnOffPoint.offTime.ms = 100

# Optional control point supporting complementary function codes 0x03, 0x04, 0x41 and 0x81.
control.latchAndPulsePoint.index = 1

# Valid count for Group12Var1 min: 1 max: 255
control.latchAndPulsePoint.count = 1

# On time in ms min: 0 max: 65535
control.latchAndPulsePoint.onTime.ms = 100

# Off time in ms min: 0 max: 65535
control.latchAndPulsePoint.offTime.ms = 100

# Optional single function point supported function code Pulse On/NUL (0x01).
control.singleFunctionPulseOnPoint.index = 1

# Valid count for Group12Var1 min: 1 max: 255
control.singleFunctionPulseOnPoint.count = 1

# On time in ms min: 0 max: 65535
control.singleFunctionPulseOnPoint.onTime.ms = 100

# Off time in ms min: 0 max: 65535
control.singleFunctionPulseOnPoint.offTime.ms = 100

# Optional single function point supported function code Latch On/NUL (0x03).
control.singleFunctionLatchOnPoint.index = 1

# Valid count for Group12Var1 min: 1 max: 255
control.singleFunctionLatchOnPoint.count = 1

# On time in ms min: 0 max: 65535
control.singleFunctionLatchOnPoint.onTime.ms = 100

# Off time in ms min: 0 max: 65535
control.singleFunctionLatchOnPoint.offTime.ms = 100

# Optional single function point supported function code Latch Off/NUL (0x04).
control.singleFunctionLatchOffPoint.index = 1

# Valid count for Group12Var1 min: 1 max: 255
control.singleFunctionLatchOffPoint.count = 1

# On time in ms min: 0 max: 65535
control.singleFunctionLatchOffPoint.onTime.ms = 100

# Off time in ms min: 0 max: 65535
control.singleFunctionLatchOffPoint.offTime.ms = 100

# Optional single function point supported function code Pulse On/Close (0x41).
control.singleFunctionPulseOnClosePoint.index = 1

# Valid count for Group12Var1 min: 1 max: 255
control.singleFunctionPulseOnClosePoint.count = 1

# On time in ms min: 0 max: 65535
control.singleFunctionPulseOnClosePoint.onTime.ms = 100

# Off time in ms min: 0 max: 65535
control.singleFunctionPulseOnClosePoint.offTime.ms = 100

# Optional single function point supported function code Pulse On/Trip (0x81).
control.singleFunctionPulseOnTripPoint.index = 1

# Valid count for Group12Var1 min: 1 max: 255
control.singleFunctionPulseOnTripPoint.count = 1

# On time in ms min: 0 max: 65535
control.singleFunctionPulseOnTripPoint.onTime.ms = 100

# Off time in ms min: 0 max: 65535
control.singleFunctionPulseOnTripPoint.offTime.ms = 100

################################################################################
# Options related to analog outputs (g41)
################################################################################

# Index not assigned to any analog output point
analogOutput.uninstalled.index = 65535

# List of all installed AO indices
analogOutput.installedPoints = 0 ... 9

# Maximum number of analog outputs that are supported in a single request min: 1
analogOutput.maxAnalogOutputsInSingleRequest = 1

# Index of a supported Group41Var2
analogOutput.primary.valid.index = 0

# Value of supported by Group41Var2 min: 0
analogOutput.primary.valid.value = 10

# Index of a supported Group41Var2
analogOutput.alternate.valid.index = 1

# Value of supported by Group41Var2 min: 0
analogOutput.alternate.valid.value = 11

################################################################################
# Class options
################################################################################

# Support Class 1 event reporting.
class.supportClass1 = true

# Number of Class 1 that will be generated manually. min: 1
class.numClass1EventsGenerated = 1

# Support Class 2 event reporting.
class.supportClass2 = true

# Number of Class 2 that will be generated manually. min: 1
class.numClass2EventsGenerated = 1

# Support Class 3 event reporting.
class.supportClass3 = true

# Number of Class 3 that will be generated manually. min: 1
class.numClass3EventsGenerated = 1

################################################################################
# Event buffer sizes
################################################################################

# Maximum number of binary input events min: 1
event.buffer.maxBinaryInputEvents = 10

# Maximum number of analog input events min: 1
event.buffer.maxAnalogInputEvents = 10

# Maximum number of binary counter events min: 1
event.buffer.maxCounterEvents = 10

# Maximum number of double-bit binary input events min: 1
event.buffer.maxDoubleBitBinaryInputEvents = 10

################################################################################
# Behaviors that can vary between devices, but still remain conformant
################################################################################

# Does the device issue link reset if it receives a NACK while waiting for ACK?
behaviors.resetsLinkOnNack = false

################################################################################
# Time synchronization options
################################################################################

# Does the DUT support setting its time via DNP3 from a master (i.e. reports IIN1-4) ?
timesync.supportSynchronizingTimeFromMaster = true

# Does the DUT support Binary Input Change with Time events (g2v2) ?
timesync.binaryInputChangeWithTime = true

# Does the DUT support Binary Input Change with Relative Time events (g2v3) ?
timesync.binaryInputChangeWithRelativeTime = true

# Maximum time (in milliseconds) from reset to IIN1-4 assertion
timesync.maxTimeFromResetToIIN14Ms = 0

# Latency to use when synchronizing the time min: 0
timesync.timeWriteLatencyMs = 5

################################################################################
# Options related to tests in section 8.6
################################################################################

# binary output point used in test case 8.6.4.3
flag.tests.individualRemoteSupervisoryOutputIndex = 0

################################################################################
# Options related to binary inputs (g1 and g2)
################################################################################

# Number of Binary Input Events that will be generated manually. min: 1
binaryInput.numBinaryEventsGenerated = 1

# Binary Input Events class assignment. min: 1 max: 3
binaryInput.binaryEventsClass = 1

################################################################################
# Options related to Double-bit inputs (g3 and g4)
################################################################################

# Number of Double-bit Input Events that will be generated manually. min: 1
doubleBitInput.numDoubleBitEventsGenerated = 1

# Double-bit Input Events class assignment. min: 1 max: 3
doubleBitInput.doubleBitEventsClass = 1

################################################################################
# Options related to counters (g20 and g22)
################################################################################

# Number of Counter Events that will be generated manually. min: 1
counter.numCounterEventsGenerated = 1

# Counter Events class assignment. min: 1 max: 3
counter.counterEventsClass = 1

################################################################################
# Options related to analog inputs (g30 and g32)
################################################################################

# Analog Input Events class assignment. min: 1 max: 3
analogInput.analogInputEventsClass = 1

################################################################################
# Unsolicited response options
################################################################################

# Unsolicited confirmation timeout value (in ms) min: 1
unsolicited.unsolicitedConfirmTimeoutMs = 5000

# Other Master address where unsolicited responses can be configured to send to min: 0 max: 65519
unsolicited.otherMasterAddress = 2

# Does the device supports a minimum amount of event data before sending an unsolicited response?
unsolicited.hasMinNumEventsBeforeUnsolicited = false

################################################################################
# Optionally supported DNP3 features
################################################################################

# Does the DUT support Binary Input points?
supports.binaryInput = true

# Is the device is configurable in a manner such that all Binary Input points can be uninstalled or disabled?
supports.disable.binaryInput = true

# Does the DUT support Binary Input change events?
supports.binaryInputChangeEvents = true

# Does the DUT support Double Bit points?
supports.doubleBit = true

# Is the device is configurable in a manner such that all Double Bit points can be uninstalled or disabled?
supports.disable.doubleBit = true

# Does the DUT support Double Bit change events?
supports.doubleBitChangeEvents = true

# Does the DUT support Counter points?
supports.counter = true

# Is the device is configurable in a manner such that all Counter points can be uninstalled or disabled?
supports.disable.counter = true

# Does the DUT support Counter change events?
supports.counterChangeEvents = true

# Does the DUT support Frozen Counter points?
supports.frozenCounter = true

# Is the device is configurable in a manner such that all Frozen Counter points can be uninstalled or disabled?
supports.disable.frozenCounter = true

# Does the DUT support Frozen Counter change events?
supports.frozenCounterChangeEvents = true

# Does the DUT support Analog Input points?
supports.analog = true

# Is the device is configurable in a manner such that all Analog Input points can be uninstalled or disabled?
supports.disable.analog = true

# Does the DUT support Analog Input change events?
supports.analogChangeEvents = true

# Does the DUT support Binary Output status points?
supports.binaryOutput.status = true

# Does the DUT support Binary Output points?
supports.binaryOutput.commands = true

# Is the device is configurable in a manner such that all Binary Output points can be uninstalled or disabled?
supports.disable.binaryOutput = true

# Does the DUT support Analog Output status points?
supports.analogOutput.status = true

# Does the DUT support Analog Output points?
supports.analogOutput.commands = true

# Is the device is configurable in a manner such that all Analog Output points can be uninstalled or disabled?
supports.disable.analogOutput = true

# Can the DUT be configured to request data link layer confirmation?
supports.dataLinkConfirmRequests = true

# Does the DUT support link-layer self addressing?
supports.selfAddress = false

# Is the DUT configurable such that points can be removed from all Classes (i.e. points belong to no Class)?
supports.noClassAssignment = true

# Does the DUT support placing its binary outputs in a local state?
supports.globalRemoteSupervisoryControl = true

# Does the DUT support placing individual binary outputs in a local state?
supports.individualRemoteSupervisoryControl = true

# Does the DUT has a configurable fragment size?
supports.configurableFragmentSize = false

# Does the DUT support unsolicited responses?
supports.unsolicitedResponse = true

